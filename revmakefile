main = main.f90
# benchmark = main_simple_call.f90
benchmark = Benchmarks/benchmark.f90
wrap = wrappers.f90
amodules = subroutines/amodules.f90

#lib and other stuff to include to the compiler 
PARALL  = -fopenmp
EXTRA   = -Wall -Wconversion -Wshadow -pedantic
PROFILE = #-pg -g
FLAGS_lib = -DHAVE_INLINE -g -fPIC -fno-automatic  -rdynamic -fno-second-underscore  -shared  #$(EXTRA) 
FLAGS     = -DHAVE_INLINE -g -fPIC -fno-automatic  -rdynamic -fno-second-underscore #$(EXTRA) 
OPT     = -O3
# LDFLAGS = -L/usr/lib/x86_64-linux-gnu/ -lgslcblas -lcfitsio -lpthread -lm                
libs =  -L ${HEADAS}/lib/ -lfftw3 -lm -lcfitsio -lXSFunctions -lpthread -lXSModel 
incs = -I ./fftw/fftw_comp/include/ $(FLAGS) $(libs) 
incs_lib = -I ./fftw/fftw_comp/include/  $(FLAGS_lib) $(libs) 


# set compilers
fcomp = gfortran-14 $(optimization) #$(debug) 

# the files to compile 
FCODE = $(main) $(wrap)
FTEST = $(benchmark) $(wrap) 

# CBENCH = Benchmarks/setenv.c 

fobj: $(FCODE)
	$(fcomp) $(incs) -c $(FCODE)

ftest: $(FTEST)
	$(fcomp) $(incs) -c $(FTEST)

lib:
	$(fcomp) $(incs_lib) $(PROFILE) $(wrap) -o  lib_reltrans.so 

compile: fobj
	 $(fcomp) $(incs) *.o -o main 
benchmark: ftest
	 $(fcomp)  $(incs) *.o -o benchmark 

main: clean compile cleanup

test: clean benchmark cleanup

clean:
	rm -vrf *.o *.mod *~ subroutines/*~ subroutines/*/*~  fort.* main test_main *.so *.dSYM __pycache__ libreltrans.dylib libreltrans.so Output/*

cleanup:
	rm -vf *.o *.mod *~ subroutines/*~ 
